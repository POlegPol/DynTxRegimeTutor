library(shiny)
library(markdown)
library(shinydashboard)
library(DynTxRegime)
library(DT
library(rgenoud)
library(rpart)
# server.R
# Limit Upload Data Size to 5Mb
options(shiny.maxRequestSize=5*1024^2)
shinyServer(
	function(input, output, session) {

	  ##------------------------ Load html files of case studies for methods --------------------------#
	  
	  #-----------------------
	  # Include html files 
	  #   include the html files generated by knitting
	  #   the corresponding markdown files in ./www folder
	  #     Dataset 
	  #     Outcome Regression : Case Study
	  #     AIPWE : Case Study
	  #   and output as uioutput in ui.R
	  #   this step is necssary for those files, 
	  #   as they include some code chuncks need to be run beforehand
	  #-----------------------
	  output$dataone <- renderUI({
	    withMathJax(
	      includeHTML("./www/outcome_regress_case.html"))
	    })
	 	output$ac <- renderUI({
	    withMathJax(
	    includeHTML("./www/class_case.html"))
	    })
	 	output$ac <- renderUI({
	 	  withMathJax(
	    includeHTML("./www/class_case.html"))
	    })


	  ##----------------- Load csv file: input data  --------------------------#
	  
	  #-----------------------
	  # Read uploaded csv file
	  #   allow user to update their own small dataset,
	  #   limit upload data size to 5Mb
	  #-----------------------
	  data <- callModule(csvFile, "datafile",
	          stringsAsFactors = FALSE)
	  
	  ##------------------------ User data upload  --------------------------#
	  
	  #-----------------
	  # Datatable Output
	  #   generate renderDataTable for the dataset uploaded by the user
	  #-----------------
	  output$table <- renderDataTable({
	    data()
	  })
	  
	  #-----------------------------
	  # Scatter plots with Go button
	  #   let user generate a scatter plot for the data uploaded
	  #-----------------------------
	  observeEvent(input$getplot, {
	    output$plot0 <- renderPlot({
	      if (is.null(data())) return(NULL)
	      df <-data()
	      pairs(df)
	    })
	  })

	  ########################################################################
	  ##--------------------------- Hands-on for Methods --------------------#
	  ########################################################################
	  
	  ##--------------------- outcome regression ----------------------#
	  #---------------------
	  # Specify treatment
	  #   create a box for drop list for user to select the treatment variable
	  #---------------------
	  output$varTrtR <- renderUI({
	    if (is.null(data())) return(NULL)
	    df <-data()
	    
	    items=names(df)
	    names(items)=items
	    selectInput("varTrtR", "Treatment:",items)
	  })
	  
	  #-----------------
	  # Specify response
	  #   create a box for drop list for user to select the response variable
	  #-----------------
	  output$varResponseR <- renderUI({
	    if (is.null(data())) return(NULL)
	    df <-data()
	    
	    items=names(df)
	    names(items)=items
	    selectInput("varResponseR", "Response:",items)
	  })
	  
	  #-------------
	  # Specify moMain
	  #   create a list of checkbox for multi-seleciton, allow the user to select
	  #   variables to be included in the moMain modeling
	  #-------------
	  output$varMainR <- renderUI({
	    if (is.null(data())) return(NULL)
	    df <-data()
	    
	    varName <- names(df)
	    varName <- varName[!(varName %in% c(input$varTrtR, input$varResponseR)) ]
	    checkboxGroupInput("varMainR", 
